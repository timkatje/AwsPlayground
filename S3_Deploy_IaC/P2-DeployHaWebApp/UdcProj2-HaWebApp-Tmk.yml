Parameters:
# whatever you consider a changing value, put it as a parameter instead of hard-coding it into your script
  EnvironmentName:
      Description: The environment name prefixed to all resources created by this template
      Type: String
      Default: UdcProj2-HaWebApp-Tmk

  IpCidrVpc: 
      Description: Enter the IP (CIDR) range for the VPC
      Type: String
      Default: 10.0.0.0/16

  IpCidrSubnetPub01: 
      Description: Enter the IP (CIDR) range for Public Subnet #1
      Type: String
      Default: 10.0.1.0/24

  IpCidrSubnetPub02: 
      Description: Enter the IP (CIDR) range for Public Subnet #2
      Type: String
      Default: 10.0.2.0/24

  IpCidrSubnetPvt01: 
      Description: Enter the IP (CIDR) range for Private Subnet #1
      Type: String
      Default: 10.0.3.0/24

  IpCidrSubnetPvt02: 
      Description: Enter the IP (CIDR) range for Private Subnet #2
      Type: String
      Default: 10.0.4.0/24

Resources:
  #instance profile contains the IAM Role name(s) that we want to associate to our auto scaling EC2 Servers
  # ProfileWithRolesForOurApp:
  #   Type: AWS::IAM::InstanceProfile
  #   Properties: 
  #     Roles:
  #       - UdacityS3ReadOnlyEC2
  
  #         #!/bin/bash
  #         apt-get update -y
  #         apt-get install unzip awscli -y
  #         apt-get install apache2 -y
  #         systemctl start apache2.service
  #         cd /var/www/html
  #         aws s3 cp s3://udacity-demo-1/udacity.zip .
  #         unzip -o udacity.zip

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref IpCidrVpc
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: !Ref IpCidrSubnetPub01
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: !Ref IpCidrSubnetPub02
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: !Ref IpCidrSubnetPvt01
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: !Ref IpCidrSubnetPvt02
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
  
  NatGateway2:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2

Outputs: 
  #Bonus points for useful outputs!
  VPC: 
    Description: A reference to the project's VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${EnvironmentName}-VPCID

  PublicSubnets:
    Description: List of all public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
    Export:
      Name: !Sub ${EnvironmentName}-Subnets-Pub

  PublicSubnet1:
    Description: Public subnet in AZ1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-Subnet-Pub1

  PublicSubnet2: 
    Description: Public subnet in AZ2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-Subnet-Pub2

  PrivateSubnets:
    Description: List of all private subnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
    Export:
      Name: !Sub ${EnvironmentName}-Subnets-Pvt

  PrivateSubnet1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PRI1-SN

  PrivateSubnet2: 
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PRI2-SN